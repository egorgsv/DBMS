DROP TABLE LINE_STOPS
/
DROP TABLE SERVICE_DAYS
/
DROP TABLE DAY_OF_WEEK
/
DROP TABLE CANCELLATION
/
DROP TABLE STOPS_AT
/
DROP TABLE ROUTE
/
DROP TABLE STATION
/
DROP TABLE LINE
/
DROP TABLE SCHEDULE_TYPE
/



CREATE TABLE "STATION"
   (	"X" NUMBER,
	"Y" NUMBER,
	"STATION_ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE,
	"STATION_NAME" VARCHAR2(255),
	 CONSTRAINT "STATION_PK_CON" PRIMARY KEY ("STATION_ID")
  USING INDEX  ENABLE
   )
/

CREATE TABLE  "ROUTE"
   (	"ROUTE_ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE,
	"LINE_ID" NUMBER,
	"TRAIN_TYPE" VARCHAR2(255),
	"SERVICE_DAYS" VARCHAR2(255),
	"ORIGIN_ID" NUMBER,
	"DESTINATION_ID" NUMBER,
	 CONSTRAINT "ROUTE_CON" PRIMARY KEY ("ROUTE_ID")
  USING INDEX  ENABLE
   )
/

CREATE TABLE  "STOPS_AT"
   (	"ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE,
	"STATION_ROUTE_ID" NUMBER,
	"STATION_ID" NUMBER,
	"ROUTE_ID" NUMBER,
	"ARRIVAL_TIME" VARCHAR2(50),
	"DEPARTURE_TIME" VARCHAR2(50),
	"BOARDING" VARCHAR2(50),
	"STATION_ORDER" NUMBER,
	 PRIMARY KEY ("ID")
  USING INDEX  ENABLE
   )
/

CREATE TABLE  "SERVICE_DAYS"
   (	"ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE,
	"SCHEDULE_TYPE" VARCHAR2(255),
	"DAY_ID" NUMBER,
	 PRIMARY KEY ("ID")
  USING INDEX  ENABLE
   )
/


CREATE TABLE  "SCHEDULE_TYPE"
   (	"SCHEDULE_TYPE" VARCHAR2(255),
	"SCHEDULE_TYPE_ID" NUMBER,
	 CONSTRAINT "SCHEDULE_TYPE_PK_CON" PRIMARY KEY ("SCHEDULE_TYPE")
  USING INDEX  ENABLE
   )
/

CREATE TABLE  "LINE"
   (	"LINE_ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE,
	"LINE_NAME" VARCHAR2(255),
	 CONSTRAINT "LINE_PK_CON" PRIMARY KEY ("LINE_ID")
  USING INDEX  ENABLE
   )
/

CREATE TABLE  "LINE_STOPS"
   (	"LINE_STOP_ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE,
	"STATION_ID" NUMBER,
	"LINE_ID" NUMBER,
	"STOP_ORDER" NUMBER,
	 CONSTRAINT "LINE_STOPS_PK_CON" PRIMARY KEY ("LINE_STOP_ID")
  USING INDEX  ENABLE
   )
/


CREATE TABLE  "DAY_OF_WEEK"
   (	"DAY_ID" NUMBER,
	"DAY_NAME" VARCHAR2(100),
	"DAY_ORDER" NUMBER,
	 CONSTRAINT "DAY_OF_WEEK_PK_CON" PRIMARY KEY ("DAY_ID")
  USING INDEX  ENABLE
   )
/


CREATE TABLE  "CANCELLATION"
   (	"CANCELLATION_ID" NUMBER NOT NULL ENABLE,
	"CANCELLATION_DATE" DATE NOT NULL ENABLE,
	"ROUTE_ID" NUMBER NOT NULL ENABLE,
	 CONSTRAINT "CANCELLATION_PK" PRIMARY KEY ("CANCELLATION_ID")
  USING INDEX  ENABLE
   )
/
ALTER TABLE  "CANCELLATION" ADD CONSTRAINT "CANCELLATION_FK_CON" FOREIGN KEY ("ROUTE_ID")
	  REFERENCES  "ROUTE" ("ROUTE_ID") ENABLE
/


CREATE OR REPLACE EDITIONABLE TRIGGER  "BI_CANCELLATION"
  before insert on "CANCELLATION"
  for each row
begin
  if :NEW."CANCELLATION_ID" is null then
    select "CANCELLATION_SEQ".nextval into :NEW."CANCELLATION_ID" from sys.dual;
  end if;
end;

/
ALTER TRIGGER  "BI_CANCELLATION" ENABLE
/

ALTER TABLE  "ROUTE" ADD CONSTRAINT "ROUTE_DESTINATION_CON" FOREIGN KEY ("DESTINATION_ID")
	  REFERENCES  "STATION" ("STATION_ID") ENABLE
/
ALTER TABLE  "ROUTE" ADD CONSTRAINT "ROUTE_FK_SCHED_CON" FOREIGN KEY ("SERVICE_DAYS")
	  REFERENCES  "SCHEDULE_TYPE" ("SCHEDULE_TYPE") ENABLE
/
ALTER TABLE  "ROUTE" ADD CONSTRAINT "ROUTE_LINE_CON" FOREIGN KEY ("LINE_ID")
	  REFERENCES  "LINE" ("LINE_ID") ENABLE
/
ALTER TABLE  "ROUTE" ADD CONSTRAINT "ROUTE_ORIGIN_CON" FOREIGN KEY ("ORIGIN_ID")
	  REFERENCES  "STATION" ("STATION_ID") ENABLE
/

ALTER TABLE  "STOPS_AT" ADD CONSTRAINT "STOPS_AT_FK1_CON" FOREIGN KEY ("STATION_ID")
	  REFERENCES  "STATION" ("STATION_ID") ENABLE
/
ALTER TABLE  "STOPS_AT" ADD CONSTRAINT "STOPS_AT_FK2_CON" FOREIGN KEY ("ROUTE_ID")
	  REFERENCES  "ROUTE" ("ROUTE_ID") ENABLE
/

ALTER TABLE  "SERVICE_DAYS" ADD CONSTRAINT "SERVICE_DAYS_FK1_CON" FOREIGN KEY ("SCHEDULE_TYPE")
	  REFERENCES  "SCHEDULE_TYPE" ("SCHEDULE_TYPE") ENABLE
/
ALTER TABLE  "SERVICE_DAYS" ADD CONSTRAINT "SERVICE_DAYS_FK2_CON" FOREIGN KEY ("DAY_ID")
	  REFERENCES  "DAY_OF_WEEK" ("DAY_ID") ENABLE
/

ALTER TABLE  "LINE_STOPS" ADD CONSTRAINT "LINE_STOPS_FK1_CON" FOREIGN KEY ("STATION_ID")
	  REFERENCES  "STATION" ("STATION_ID") ENABLE
/
ALTER TABLE  "LINE_STOPS" ADD CONSTRAINT "LINE_STOPS_FK2_CON" FOREIGN KEY ("LINE_ID")
	  REFERENCES  "LINE" ("LINE_ID") ENABLE
/


CREATE OR REPLACE FORCE EDITIONABLE VIEW "ROUTE_NAME" ("ROUTE_ID", "НАЗВАНИЕ_МАРШРУТА", "ТИП_ПОЕЗДА", "ДНИ_РАБОТЫ") AS
  SELECT ROUTE.ROUTE_ID,
ORIGIN.STATION_NAME || ' ➔ ' || DEST.STATION_NAME НАЗВАНИЕ_МАРШРУТА,
TRAIN_TYPE ТИП_ПОЕЗДА,
SERVICE_DAYS ДНИ_РАБОТЫ FROM ROUTE
JOIN STATION ORIGIN ON ORIGIN.STATION_ID = ROUTE.ORIGIN_ID
JOIN STATION DEST ON DEST.STATION_ID = ROUTE.DESTINATION_ID
ORDER BY 1
/

CREATE OR REPLACE FORCE EDITIONABLE VIEW "ROUTE_SCHEDULE" ("ROUTE_ID", "НАЗВАНИЕ_СТАНЦИИ", "ТИП_ПОЕЗДА", "ДНИ_РАБОТЫ", "ВРЕМЯ_ОТПРАВЛЕНИЯ", "ВРЕМЯ_ПРИБЫТИЯ", "ПОСАДКА_НА_СТАНЦИИ", "НОМЕР_СТАНЦИИ_НА_СТАНЦИИ") AS
  SELECT ROUTE.ROUTE_ID,STATION_NAME НАЗВАНИЕ_СТАНЦИИ,TRAIN_TYPE ТИП_ПОЕЗДА, SERVICE_DAYS ДНИ_РАБОТЫ,
SAT.DEPARTURE_TIME ВРЕМЯ_ОТПРАВЛЕНИЯ,
SAT.ARRIVAL_TIME ВРЕМЯ_ПРИБЫТИЯ,
BOARDING ПОСАДКА_НА_СТАНЦИИ, STATION_ORDER НОМЕР_СТАНЦИИ_НА_СТАНЦИИ  FROM ROUTE
JOIN STOPS_AT SAT ON ROUTE.ROUTE_ID = SAT.ROUTE_ID
JOIN STATION ST ON ST.STATION_ID = SAT.STATION_ID
ORDER BY 1,STATION_ORDER
/

CREATE OR REPLACE FORCE EDITIONABLE VIEW "ROUTE_SCHEDULE_TODAY" ("ROUTE_ID", "НАЗВАНИЕ_СТАНЦИИ", "ВРЕМЯ_ОТПРАВЛЕНИЯ", "ВРЕМЯ_ПРИБЫТИЯ", "ПОСАДКА_НА_СТАНЦИИ", "НОМЕР_СТАНЦИИ_НА_МАРШРУТЕ") AS
  SELECT ROUTE.ROUTE_ID, ST.STATION_NAME НАЗВАНИЕ_СТАНЦИИ,
SAT.DEPARTURE_TIME ВРЕМЯ_ОТПРАВЛЕНИЯ,
SAT.ARRIVAL_TIME ВРЕМЯ_ПРИБЫТИЯ,
SAT.BOARDING ПОСАДКА_НА_СТАНЦИИ, SAT.STATION_ORDER НОМЕР_СТАНЦИИ_НА_МАРШРУТЕ FROM ROUTE
JOIN STOPS_AT SAT ON ROUTE.ROUTE_ID = SAT.ROUTE_ID
JOIN STATION ST ON ST.STATION_ID = SAT.STATION_ID
JOIN STATION DEST ON DEST.STATION_ID = ROUTE.DESTINATION_ID
JOIN SCHEDULE_TYPE SCHEDT ON SCHEDT.SCHEDULE_TYPE = ROUTE.SERVICE_DAYS
JOIN SERVICE_DAYS SD ON SD.SCHEDULE_TYPE = SCHEDT.SCHEDULE_TYPE
JOIN DAY_OF_WEEK DW ON SD.DAY_ID = DW.DAY_ID
JOIN CANCELLATION CN ON CN.ROUTE_ID = ROUTE.ROUTE_ID
WHERE DW.DAY_ORDER = to_char(SYSDATE + 3/24, 'D')
AND to_char(CANCELLATION_DATE) <> to_char(SYSDATE + 3/24)
ORDER BY 1, SAT.STATION_ORDER
/

CREATE OR REPLACE FORCE EDITIONABLE VIEW "SCHEDULE2STATIONS" ("ИНФОРМАЦИЯ", "СТАНЦИЯ_ОТПРАВЛЕНИЯ", "СТАНЦИЯ_ПРИБЫТИЯ", "ВРЕМЯ_ОТПРАВЛЕНИЯ", "ДЛИТЕЛЬНОСТЬ_ПОЕЗДКИ", "ВРЕМЯ_ПРИБЫТИЯ", "ТИП_ПОЕЗДА", "ДНИ_РАБОТЫ") AS
  SELECT
    'Поезд ушёл' ИНФОРМАЦИЯ,
    OST.STATION_NAME СТАНЦИЯ_ОТПРАВЛЕНИЯ,
    DST.STATION_NAME СТАНЦИЯ_ПРИБЫТИЯ,
    OLST.DEPARTURE_TIME ВРЕМЯ_ОТПРАВЛЕНИЯ,
    TO_CHAR(ROUND((to_date(DLST.ARRIVAL_TIME, 'hh24:mi:ss') - to_date(OLST.DEPARTURE_TIME, 'hh24:mi:ss'))*24*60)) || ' минут' ДЛИТЕЛЬНОСТЬ_ПОЕЗДКИ,
    DLST.ARRIVAL_TIME ВРЕМЯ_ПРИБЫТИЯ,
    ROUTE.TRAIN_TYPE ТИП_ПОЕЗДА,
    ROUTE.SERVICE_DAYS ДНИ_РАБОТЫ FROM STATION OST
CROSS JOIN STATION DST
JOIN STOPS_AT OLST ON OST.STATION_ID = OLST.STATION_ID
JOIN STOPS_AT DLST ON DST.STATION_ID = DLST.STATION_ID
JOIN ROUTE ON OLST.ROUTE_ID = ROUTE.ROUTE_ID
JOIN SCHEDULE_TYPE SCHEDT ON SCHEDT.SCHEDULE_TYPE = ROUTE.SERVICE_DAYS
JOIN SERVICE_DAYS SD ON SD.SCHEDULE_TYPE = SCHEDT.SCHEDULE_TYPE
JOIN DAY_OF_WEEK DW ON SD.DAY_ID = DW.DAY_ID
JOIN CANCELLATION CN ON CN.ROUTE_ID = ROUTE.ROUTE_ID
WHERE OLST.ROUTE_ID = DLST.ROUTE_ID
AND OLST.STATION_ORDER < DLST.STATION_ORDER
AND OLST.BOARDING = 'Посадка есть'
AND DLST.BOARDING = 'Посадка есть'
AND DAY_ORDER = to_char(SYSDATE, 'D')
AND OLST.DEPARTURE_TIME < to_char(SYSDATE + 3/24,  'hh24:mi:ss')
AND to_char(CANCELLATION_DATE) <> to_char(SYSDATE + 3/24)
UNION
SELECT 'Отправление через ' ||
trunc(24*mod ( to_date(OLST.DEPARTURE_TIME, 'hh24:mi:ss') - to_date(to_char(SYSDATE + 3/24, 'hh24:mi:ss'), 'hh24:mi:ss'), 1) ) || ' ч. '
|| trunc( mod(mod(to_date(OLST.DEPARTURE_TIME, 'hh24:mi:ss') - to_date(to_char(SYSDATE + 3/24, 'hh24:mi:ss'), 'hh24:mi:ss'), 1)*24, 1)*60 )|| ' мин.' ИНФОРМАЦИЯ,
    OST.STATION_NAME СТАНЦИЯ_ОТПРАВЛЕНИЯ,
    DST.STATION_NAME СТАНЦИЯ_ПРИБЫТИЯ,
    OLST.DEPARTURE_TIME ВРЕМЯ_ОТПРАВЛЕНИЯ,
    TO_CHAR(ROUND((to_date(DLST.ARRIVAL_TIME, 'hh24:mi:ss') - to_date(OLST.DEPARTURE_TIME, 'hh24:mi:ss'))*24*60)) || ' минут' ДЛИТЕЛЬНОСТЬ_ПОЕЗДКИ,
    DLST.ARRIVAL_TIME ВРЕМЯ_ПРИБЫТИЯ,
    ROUTE.TRAIN_TYPE ТИП_ПОЕЗДА,
ROUTE.SERVICE_DAYS ДНИ_РАБОТЫ FROM STATION OST
CROSS JOIN STATION DST
JOIN STOPS_AT OLST ON OST.STATION_ID = OLST.STATION_ID
JOIN STOPS_AT DLST ON DST.STATION_ID = DLST.STATION_ID
JOIN ROUTE ON OLST.ROUTE_ID = ROUTE.ROUTE_ID
JOIN SCHEDULE_TYPE SCHEDT ON SCHEDT.SCHEDULE_TYPE = ROUTE.SERVICE_DAYS
JOIN SERVICE_DAYS SD ON SD.SCHEDULE_TYPE = SCHEDT.SCHEDULE_TYPE
JOIN DAY_OF_WEEK DW ON SD.DAY_ID = DW.DAY_ID
JOIN CANCELLATION CN ON CN.ROUTE_ID = ROUTE.ROUTE_ID
WHERE OLST.ROUTE_ID = DLST.ROUTE_ID
AND OLST.STATION_ORDER < DLST.STATION_ORDER
AND OLST.BOARDING = 'Посадка есть'
AND DLST.BOARDING = 'Посадка есть'
AND DAY_ORDER = to_char(SYSDATE + 3/24, 'D')
AND OLST.DEPARTURE_TIME > to_char(SYSDATE + 3/24, 'hh24:mi:ss')
AND to_char(CANCELLATION_DATE) <> to_char(SYSDATE + 3/24)
UNION
SELECT 'Поезд отменён' ИНФОРМАЦИЯ,
    OST.STATION_NAME СТАНЦИЯ_ОТПРАВЛЕНИЯ,
    DST.STATION_NAME СТАНЦИЯ_ПРИБЫТИЯ,
    OLST.DEPARTURE_TIME ВРЕМЯ_ОТПРАВЛЕНИЯ,
    TO_CHAR(ROUND((to_date(DLST.ARRIVAL_TIME,  'hh24:mi:ss') - to_date(OLST.DEPARTURE_TIME,  'hh24:mi:ss'))*24*60)) || ' минут' ДЛИТЕЛЬНОСТЬ_ПОЕЗДКИ,
    DLST.ARRIVAL_TIME ВРЕМЯ_ПРИБЫТИЯ,
    ROUTE.TRAIN_TYPE ТИП_ПОЕЗДА,
ROUTE.SERVICE_DAYS ДНИ_РАБОТЫ FROM STATION OST
CROSS JOIN STATION DST
JOIN STOPS_AT OLST ON OST.STATION_ID = OLST.STATION_ID
JOIN STOPS_AT DLST ON DST.STATION_ID = DLST.STATION_ID
JOIN ROUTE ON OLST.ROUTE_ID = ROUTE.ROUTE_ID
JOIN SCHEDULE_TYPE SCHEDT ON SCHEDT.SCHEDULE_TYPE = ROUTE.SERVICE_DAYS
JOIN SERVICE_DAYS SD ON SD.SCHEDULE_TYPE = SCHEDT.SCHEDULE_TYPE
JOIN DAY_OF_WEEK DW ON SD.DAY_ID = DW.DAY_ID
JOIN CANCELLATION CN ON CN.ROUTE_ID = ROUTE.ROUTE_ID
WHERE OLST.ROUTE_ID = DLST.ROUTE_ID
AND OLST.STATION_ORDER < DLST.STATION_ORDER
AND OLST.BOARDING = 'Посадка есть'
AND DLST.BOARDING = 'Посадка есть'
AND DAY_ORDER = to_char(SYSDATE + 3/24, 'D')
AND to_char(CANCELLATION_DATE) = to_char(SYSDATE + 3/24)
ORDER BY 4
/

CREATE OR REPLACE FORCE EDITIONABLE VIEW "STATION_SCHEDULE_TODAY" ("ROUTE_ID", "STATION_ID", "НАЗВАНИЕ_МАРШРУТА", "НАЗВАНИЕ_СТАНЦИИ", "ТИП_ПОЕЗДА", "ОТМЕНА_ПОЕЗДА", "ДНИ_РАБОТЫ", "ВРЕМЯ_ОТПРАВЛЕНИЯ", "ВРЕМЯ_ПРИБЫТИЯ", "ПОСАДКА_НА_СТАНЦИИ", "НОМЕР_СТАНЦИИ_НА_МАРШРУТЕ") AS
  SELECT ROUTE.ROUTE_ID,
SAT.STATION_ID,
ORIGIN.STATION_NAME || ' ➔ ' || DEST.STATION_NAME НАЗВАНИЕ_МАРШРУТА,
ST.STATION_NAME НАЗВАНИЕ_СТАНЦИИ,
TRAIN_TYPE ТИП_ПОЕЗДА,
'Нет' ОТМЕНА_ПОЕЗДА,
SERVICE_DAYS ДНИ_РАБОТЫ,
SAT.DEPARTURE_TIME ВРЕМЯ_ОТПРАВЛЕНИЯ,
SAT.ARRIVAL_TIME ВРЕМЯ_ПРИБЫТИЯ,
BOARDING ПОСАДКА_НА_СТАНЦИИ, STATION_ORDER НОМЕР_СТАНЦИИ_НА_МАРШРУТЕ  FROM ROUTE
JOIN STOPS_AT SAT ON ROUTE.ROUTE_ID = SAT.ROUTE_ID
JOIN STATION ST ON ST.STATION_ID = SAT.STATION_ID
JOIN STATION ORIGIN ON ORIGIN.STATION_ID = ROUTE.ORIGIN_ID
JOIN STATION DEST ON DEST.STATION_ID = ROUTE.DESTINATION_ID
JOIN SCHEDULE_TYPE SCHEDT ON SCHEDT.SCHEDULE_TYPE = ROUTE.SERVICE_DAYS
JOIN SERVICE_DAYS SD ON SD.SCHEDULE_TYPE = SCHEDT.SCHEDULE_TYPE
JOIN DAY_OF_WEEK DW ON SD.DAY_ID = DW.DAY_ID
RIGHT JOIN CANCELLATION CN ON CN.ROUTE_ID = ROUTE.ROUTE_ID
WHERE DW.DAY_ID = to_char(SYSDATE + 3/24, 'D')
AND to_char(CANCELLATION_DATE) <> to_char(SYSDATE + 3/24)
UNION
SELECT ROUTE.ROUTE_ID,
SAT.STATION_ID,
ORIGIN.STATION_NAME || ' ➔ ' || DEST.STATION_NAME НАЗВАНИЕ_МАРШРУТА,
ST.STATION_NAME НАЗВАНИЕ_СТАНЦИИ,
TRAIN_TYPE ТИП_ПОЕЗДА,
'Поезд отменён' ОТМЕНА_ПОЕЗДА,
SERVICE_DAYS ДНИ_РАБОТЫ,
SAT.DEPARTURE_TIME ВРЕМЯ_ОТПРАВЛЕНИЯ,
SAT.ARRIVAL_TIME ВРЕМЯ_ПРИБЫТИЯ,
BOARDING ПОСАДКА_НА_СТАНЦИИ, STATION_ORDER НОМЕР_СТАНЦИИ_НА_МАРШРУТЕ  FROM ROUTE
JOIN STOPS_AT SAT ON ROUTE.ROUTE_ID = SAT.ROUTE_ID
JOIN STATION ST ON ST.STATION_ID = SAT.STATION_ID
JOIN STATION ORIGIN ON ORIGIN.STATION_ID = ROUTE.ORIGIN_ID
JOIN STATION DEST ON DEST.STATION_ID = ROUTE.DESTINATION_ID
JOIN SCHEDULE_TYPE SCHEDT ON SCHEDT.SCHEDULE_TYPE = ROUTE.SERVICE_DAYS
JOIN SERVICE_DAYS SD ON SD.SCHEDULE_TYPE = SCHEDT.SCHEDULE_TYPE
JOIN DAY_OF_WEEK DW ON SD.DAY_ID = DW.DAY_ID
RIGHT JOIN CANCELLATION CN ON CN.ROUTE_ID = ROUTE.ROUTE_ID
WHERE DW.DAY_ID = to_char(SYSDATE + 3/24, 'D')
AND to_char(CANCELLATION_DATE) = to_char(SYSDATE + 3/24)
ORDER BY НАЗВАНИЕ_СТАНЦИИ, ВРЕМЯ_ОТПРАВЛЕНИЯ
/
